---
import CarouselItem from "./CarouselItem.astro";

interface Item {
    title: string;
    description: string;
    href: string;
    image: string;
    icons: ImageMetadata[];
}

const {
    gradient = true,
    reverse = false,
    duration = "50s",
    height = "400px",
    items = [],
} = Astro.props as {
    gradient?: boolean;
    reverse?: boolean;
    height: string;
    duration?: string;
    items?: Item[];
};
---

<div
    class="carousel"
    style={`--items: ${items.length}; --carousel-duration: ${duration}; --height: ${height}`}
    data-gradient={gradient ? "true" : "false"}
    data-reverse={reverse ? "true" : "false"}
>
    {
        items.map((item) => (
            <CarouselItem
                title={item.title}
                href={item.href}
                image={item.image}
                icons={item.icons}
                description={item.description}
            />
        ))
    }
</div>

<style>
    .carousel {
        display: flex;

        height: var(--height);

        align-items: center;

        position: relative;
        overflow: hidden;

        --carousel-item-width: 480px;
        --carousel-item-gap: 2rem;
    }

    .carousel[data-gradient="true"] {
        mask-image: linear-gradient(
            to right,
            transparent,
            black 10%,
            black 90%,
            transparent
        );
        -webkit-mask-image: linear-gradient(
            to right,
            transparent,
            black 10%,
            black 90%,
            transparent
        );
    }

    .carousel > * {
        animation: marquee var(--carousel-duration) linear infinite;
        margin-right: var(--carousel-item-gap);
    }

    .carousel[data-reverse="true"] > * {
        animation-direction: reverse;
    }

    .carousel > *:hover {
        animation-play-state: paused;
    }

    :global(@keyframes marquee) {
        100% {
            transform: translateX(
                calc(
                    var(--items) *
                        (var(--carousel-item-width) + var(--carousel-item-gap)) *
                        -1
                )
            );
        }
    }
</style>
