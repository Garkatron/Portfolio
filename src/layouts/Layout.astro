---
import Photo from "../components/Photo.astro";
import Icon from "../components/Icon.astro";
import facephoto from "../assets/photo.jpg";
import TechGrid from "../components/TechGrid.astro";
import PresentationCard from "../components/PresentationCard.astro";
import ProjectCard from "../components/ProjectCard.astro";
import ProjectGrid from "../components/ProjectGrid.astro";
import CarouselItem from "../components/CarouselItem.astro";
import Carousel from "../components/Carousel.astro";
import SkillProgress from "../components/SkillProgress.astro";
import RepoLangs from "../components/RepoLangs.astro";
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<link
			rel="stylesheet"
			href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
		/>
		<link
			rel="stylesheet"
			href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css"
		/>
		<title>Matias</title>
	</head>
	<body>
		<!-- Section 1: Presentation -->
		<main id="section1" class="slice">
			<PresentationCard />
		</main>

		<div id="about" class="slice">
			<Photo src={facephoto} />
			<div>
				<section>
					<p>
						Web developer & Minecraft modder. Passionate about Rust,
						compilers and creative coding
					</p>
					<p>
						Proficient in <strong class="keyword">Java</strong>,
						currently learning
						<strong class="keyword">Rust</strong> and <strong
							class="keyword">VM development</strong
						>. Passionate, fast learner, and experienced in working
						with existing codebases.
					</p>
				</section>
				<section>
					<h4>Use of AI</h4>
					<p>
						I use AI to research, clarify concepts, and handle small
						refactorings or optimizations. It helps me save time on
						repetitive tasks, but I avoid relying on it for
						large-scale refactors, complex optimizations, or as my
						main learning source.
					</p>
				</section>
				<section id="tech-stack">
					<TechGrid title="Languages">
						<SkillProgress
							src="/icons/java-svgrepo-com.svg"
							progress="85"
							title="Java"
						/>
						<SkillProgress
							src="/icons/js-svgrepo-com.svg"
							progress="75"
							title="JavaScript"
						/>
						<SkillProgress
							src="/icons/kotlin-svgrepo-com.svg"
							progress="80"
							title="Kotlin"
						/>
						<SkillProgress
							src="/icons/rust-svgrepo-com.svg"
							progress="60"
							title="Rust"
						/>
						<SkillProgress
							src="/icons/python-svgrepo-com.svg"
							progress="45"
							title="Python"
						/>
					</TechGrid>
					<TechGrid title="Frameworks & Libraries">
						<SkillProgress
							src="/icons/bootstrap-4-logo-svgrepo-com.svg"
							progress="100"
							title="Bootstrap"
						/>
						<SkillProgress
							src="/icons/astro-svgrepo-com.svg"
							progress="55"
							title="Astro"
							loading={true}
						/>
					</TechGrid>
					<TechGrid title="Tools">
						<SkillProgress
							src="/icons/git-svgrepo-com.svg"
							progress="100"
							title="Git"
						/>
						<SkillProgress
							src="/icons/postman-icon-svgrepo-com.svg"
							progress="100"
							title="Postman"
						/>
					</TechGrid>
					<TechGrid title="Other">
						<SkillProgress
							src="/icons/linux-svgrepo-com.svg"
							progress="65"
							title="Linux"
						/>
						<SkillProgress
							src="/icons/sql-database-generic-svgrepo-com.svg"
							progress="100"
							title="SQL Database"
						/>
					</TechGrid>
				</section>
			</div>
		</div>
		<!-- Section 2: Featured Projects -->
		<div id="section2" class="slice">
			<div class="section-content">
				<h2>Featured Projects</h2>
				<ProjectGrid>
					<ProjectCard
						title="Rlox lang"
						description="I developed a programming language interpreter based on jlox from Crafting Interpreters, using Rust to challenge myself and deepen my understanding of language design. Through this project, I learned the inner workings of interpreters, including lexers, parsers, and the evaluation process, while also strengthening my Rust skills, particularly in managing references and ownership. Choosing Rust, a language quite different from the Java-based approach in the book, pushed me to thoroughly grasp the concepts to adapt them effectively. I implemented a lexer to tokenize input, a parser to build an abstract syntax tree (AST), and an interpreter to execute the resulting code, gaining insight into how programming languages process and execute scripts. Additionally, I explored error handling and memory management in Rust, which enhanced my ability to write robust and efficient code. This project not only solidified my understanding of interpreters but also sparked my interest in compiler design and low-level systems programming."
						link="https://github.com/Garkatron/Rust-Lox-Interpreter"
						image="https://db0dce98.delivery.rocketcdn.me/es/files/2024/08/Programacion_Procedural_DataScientest-1024x601.png"
					/>
					<ProjectCard
						title="3D Rasterizer in Rust"
						link="https://github.com/Garkatron/ScrapRenderer"
						description="I developed a 3D rendering engine in Rust to experiment with graphics and optimization, choosing Rust for its pointer safety, which prevented common memory management errors. I relied on a series of C++ video tutorials on graphics, adapting the concepts to Rust. I implemented a basic rendering pipeline, learning the essentials of geometric transformations and 3D-to-2D projection, though I didn’t dive deeply into the math. I also figured out how to optimize rendering by skipping objects behind the camera (culling) and handling triangles within the view frustum. This project helped me grasp the basics of computer graphics and motivated me to keep exploring real-time rendering."
						image="/images/renderer3d.png"
					/>
					<ProjectCard
						title="Rust-Coded LRU"
						description="I implemented an LRU (Least Recently Used) Cache in Rust, inspired by a tutorial that helped me understand the inner workings of this data structure. Through this project, I learned how LRU caches efficiently manage data by prioritizing recently accessed items and evicting the least recently used ones when the cache reaches its capacity"
						link="https://github.com/Garkatron/LRU-Cache-Rust"
						image="https://blog.orange.es/wp-content/uploads/sites/4/2023/04/memoria-cache-07.jpg"
					/>
				</ProjectGrid>
			</div>
		</div>
		<!-- Section 3: Other Projects and Knowledge -->
		<div id="section3" class="slice">
			<div class="section-content">
				<section>
					<section>
						<h2>Other Projects</h2>
						<Carousel items="7">
							<CarouselItem
								title="CHIP-8 Emulator"
								href="https://github.com/Garkatron/Von-Neumann-Simulator"
								image="/images/chip8image.png"
							>
								CHIP-8 Emulator implemented in Python
							</CarouselItem>
							<CarouselItem
								title="TerraX69"
								href="https://github.com/Garkatron/TerraX69-JS"
							>
								JavaScript game built with Tauri
							</CarouselItem>
							<CarouselItem
								title="PC Pokémon Web"
								href="https://garkatron.github.io/PC-PokeApi/"
								image="/images/pokeapi.png"
							>
								An interactive web app for exploring Pokémon
								data using the PokéAPI
							</CarouselItem>
							<CarouselItem
								title="Von Neumann Simulator"
								href="https://github.com/Garkatron/Von-Neumann-Simulator"
								image="/images/vonneuman.png"
							>
								Von Neumann architecture simulator in Python
							</CarouselItem>
							<CarouselItem
								title="IWantToLearnX"
								href="https://github.com/Garkatron/IWantToLearnX"
							>
								A personal "Build Your Own X" project to explore
								and learn various programming concepts
							</CarouselItem>
							<CarouselItem
								title="FactBoard NEM"
								href="https://github.com/Garkatron/FactBoard_NEM"
							>
								A Node.js and MongoDB-based app for managing and
								sharing publications
							</CarouselItem>
							<CarouselItem
								title="FactBoard"
								href="https://github.com/Garkatron/FactBoard"
							>
								A PHP and MySQL-based app for managing and
								sharing publications
							</CarouselItem>
						</Carousel>
					</section>
					<section>
						<h2>Minecraft mods</h2>
						<Carousel items="5">
							<CarouselItem
								title="BTA PainScale"
								href="https://github.com/Garkatron/BTA-PainScale"
							>
								A Minecraft mod with a dynamic difficulty
								system, enhanced health mechanics, and tougher
								enemies
							</CarouselItem>
							<CarouselItem
								title="BTA Guidebook"
								href="https://github.com/Garkatron/BTA-Guidebook.md"
								image="/images/guidebook.png"
							>
								A Markdown-based guidebook library for BTA
								modders with in-game editing and export features
							</CarouselItem>
							<CarouselItem
								title="StanleyTemperature"
								href="https://github.com/Garkatron/StanleyTemperature"
								image="/images/stanley.png"
							>
								A temperature mod and skill system library for
								RPG-style gameplay in Minecraft
							</CarouselItem>
							<CarouselItem
								title="BTA Paperwork"
								href="https://github.com/Garkatron/BTA-Paperwork"
								image="/images/paperwork.png"
							>
								A Minecraft mod adding decorative blocks, items,
								and paper-based entities like cardboard boxes
							</CarouselItem>
							<CarouselItem
								title="BTA POVERH"
								href="https://github.com/Garkatron/BTA-POVERH"
								image="/images/parkour.png"
							>
								A Minecraft mod introducing stamina and parkour
								mechanics for enhanced movement
							</CarouselItem>
						</Carousel>
					</section>
				</section>
			</div>
			<footer class="footer">
				<div class="section-content">
					<p>&copy; 2025 Matias. All rights reserved.</p>
				</div>
			</footer>
		</div>

		<style>
			#tech-stack {
				width: 100%;
			}

			.section-content {
				width: 100%;
				border-radius: 8px;
				padding: 2rem;
				background: transparent;
				position: relative;
				z-index: 2;
			}

			.slice {
				height: 100vh;
				position: relative;
				z-index: 2;
			}

			#about {
				display: flex;
			}
			body {
				background-color: #1b1b1b;
				background-repeat: repeat;
				position: relative;
			}
			body::before {
				content: "";
				position: absolute;
				background-image: url("/bg/olas10.svg");
				background-size: cover;
				background-repeat: no-repeat;
				background-position: center;
				z-index: -1;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				opacity: 0.35;
				pointer-events: none;
			}

			html {
				background-color: transparent;
			}

			main {
				margin: 0;
				padding: 0;
				display: flex;
				flex-direction: row;
				justify-content: space-between;
				width: 100%;
				min-height: 100vh;
				position: relative;
				z-index: 2;
			}
			main::before {
				content: "";
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				filter: blur(5px) brightness(50%);
				background: url("/bg/ligero.jpg") center center/cover no-repeat;
				pointer-events: none;
				z-index: -1;
			}

			.footer {
				width: 100%;
				text-align: center;
				padding: 1rem 0;
				background-color: rgba(1, 4, 8, 0.379);
				color: #fff;
				position: relative;
				z-index: 2;
				bottom: 0;
			}

			.footer p {
				margin: 0;
				font-size: 0.9rem;
			}

			@media (max-width: 900px) {
				main {
					flex-direction: column;
				}
				.row {
					flex-direction: column;
					align-items: center;
				}
			}
		</style>

		<script is:inline>
			document.addEventListener("DOMContentLoaded", () => {
				document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
					anchor.addEventListener("click", function (e) {
						e.preventDefault();
						const targetId = this.getAttribute("href");
						const targetElement = document.querySelector(targetId);
						if (targetElement) {
							targetElement.scrollIntoView({
								behavior: "instant",
								block: "start",
							});
						}
					});
				});

				let isScrolling = false;

				window.addEventListener(
					"wheel",
					(e) => {
						e.preventDefault();
						if (isScrolling) return;
						isScrolling = true;

						setTimeout(() => {
							isScrolling = false;
						}, 300);
						const sections = document.querySelectorAll(".slice");
						if (sections.length === 0) {
							console.warn(
								"No se encontraron elementos con la clase .section",
							);
							return;
						}

						let currentSection = 0;

						sections.forEach((section, index) => {
							const rect = section.getBoundingClientRect();
							if (
								rect.top <= window.innerHeight / 2 &&
								rect.bottom >= window.innerHeight / 2
							) {
								currentSection = index;
							}
						});

						if (e.deltaY > 0) {
							currentSection = Math.min(
								currentSection + 1,
								sections.length - 1,
							);
						} else {
							currentSection = Math.max(currentSection - 1, 0);
						}

						sections[currentSection].scrollIntoView({
							behavior: "smooth",
						});
					},
					{ passive: false },
				);
			});

			window.addEventListener(
				"keydown",
				(e) => {
					if (["ArrowUp", "ArrowDown", "Space"].includes(e.code)) {
						e.preventDefault();
					}
				},
				{ passive: false },
			);
		</script>
	</body>
</html>
